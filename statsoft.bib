@Misc{kuhn_conventions_2019,
  title = {Conventions for {R} {Modeling} {Packages}},
  url = {https://tidymodels.github.io/model-implementation-principles/},
  abstract = {Conventions for R Modeling Packages},
  urldate = {2020-03-12},
  author = {Max Kuhn},
  year = {2019},
}

@Book{mili_software_2015,
  title = {Software testing: concepts and operations},
  isbn = {978-1-118-66287-8},
  shorttitle = {Software testing},
  language = {English},
  publisher = {Wiley},
  author = {Ali Mili},
  year = {2015},
  note = {OCLC: 875249253},
}

@Book{wickham_tidyverse_2020,
  title = {The tidyverse style guide},
  url = {https://style.tidyverse.org/},
  abstract = {The tidyverse style guide},
  urldate = {2020-03-12},
  author = {Hadley Wickham},
  year = {2020},
}

@TechReport{scott_esip_2016,
  title = {{ESIP} {Software} {Guidelines} {Draft}},
  url = {https://esipfed.github.io/Software-Assessment-Guidelines/guidelines.html},
  urldate = {2020-04-09},
  institution = {ESIP (Earth Science Information Partners)},
  author = {Soren Scott},
  year = {2016},
}

@TechReport{object_management_group_automated_2016,
  title = {Automated {Source} {Code} {CISQ} {Maintainability} {Measure} {Specification} {Version} 1.0},
  url = {https://www.omg.org/spec/ASCMM/},
  urldate = {2020-04-09},
  institution = {OMG (Object Management Group)},
  author = {Object Management Group},
  year = {2016},
}

@TechReport{jackson_software_2011,
  title = {Software {Evaluation} {Guide}},
  url = {https://www.software.ac.uk/resources/guides-everything/software-evaluation-guide},
  urldate = {2020-04-09},
  institution = {Software Sustainability Institute},
  author = {Mike Jackson and Steve Crouch and Rob Baxter},
  year = {2011},
}

@Book{group_httptransparentstatisticsorg_transparent_2019,
  title = {Transparent {Statistics} {Guidelines}},
  url = {https://transparentstats.github.io/guidelines/index.html},
  abstract = {Guidelines, FAQ, and exemplar analyses},
  urldate = {2020-04-13},
  author = {Transparent Statistics in HCI Working {Group (http://transparentstatistics.org/)}},
  year = {2019},
}

@Misc{gu_jokergoopkgndep_2020,
  title = {jokergoo/pkgndep},
  url = {https://github.com/jokergoo/pkgndep},
  abstract = {Check the Heaviness of Package Dependencies. Contribute to jokergoo/pkgndep development by creating an account on GitHub.},
  urldate = {2020-05-22},
  author = {Zuguang Gu},
  month = {may},
  year = {2020},
  note = {original-date: 2019-01-18T11:11:21Z},
}

@Misc{noauthor_dslpdslp_2020,
  title = {dslp/dslp},
  copyright = {MIT},
  url = {https://github.com/dslp/dslp},
  abstract = {The Data Science Lifecycle Process is a process for taking data science teams from Idea to Value repeatedly and sustainably. The process is documented in this repo.},
  urldate = {2020-05-20},
  publisher = {dslp},
  month = {may},
  year = {2020},
  note = {original-date: 2020-04-24T14:52:07Z},
}

@InProceedings{sculley_machine_2014,
  title = {Machine {Learning}: {The} {High} {Interest} {Credit} {Card} of {Technical} {Debt}},
  shorttitle = {Machine {Learning}},
  booktitle = {{SE4ML}: {Software} {Engineering} for {Machine} {Learning} ({NIPS} 2014 {Workshop})},
  author = {D. Sculley and Gary Holt and Daniel Golovin and Eugene Davydov and Todd Phillips and Dietmar Ebner and Vinay Chaudhary and Michael Young},
  year = {2014},
}

@Misc{reside-ic_pull_nodate,
  title = {Pull {Request} review process - {Reside}-{IC}},
  url = {https://reside-ic.github.io/articles/pull-requests/},
  urldate = {2020-05-05},
  author = {{Reside-IC}},
}

@Misc{nust_codecheck_nodate,
  title = {{CODECHECK} process},
  url = {https://codecheck.org.uk//process/},
  abstract = {CODECHECK is a process for independent reproduction of computations and awarding of time-stamped certificates for successful reproductions of scholarly articles.},
  language = {en},
  urldate = {2020-04-09},
  journal = {CODECHECK},
  author = {Stephen Eglen \& Daniel N{\"u}st},
}

@TechReport{van_gompel_clariahsoftware-quality-guidelines_2016,
  title = {{CLARIAH}/software-quality-guidelines},
  url = {https://github.com/CLARIAH/software-quality-guidelines},
  abstract = {Guidelines for software quality \& sustainability (CLARIAH WP2 task 54.100)},
  urldate = {2020-04-09},
  institution = {CLARIAH},
  author = {Maarten {van Gompel} and Jauco Noordzij and Reinier {de Valk} and Andrea Scharnhorst},
  year = {2016},
  note = {original-date: 2016-05-27T16:53:29Z},
  keywords = {quality-guidelines, software-quality, sustainability},
}

@Misc{center_dlr_nodate,
  title = {{DLR} {Software} {Initiative} {Guidelines}},
  url = {https://rse.dlr.de/01_guidelines.html},
  abstract = {The software enigineering initiative of the German Aerospace Center (DLR) - Supporting DLR scientits writing better software!},
  language = {en},
  urldate = {2020-04-09},
  journal = {DLR Software Engineering Initiative},
  author = {German Aerospace Center},
}

@Article{lamprecht_towards_2019,
  title = {Towards {FAIR} principles for\&nbsp;research\&nbsp;software},
  volume = {Preprint},
  issn = {2451-8484},
  url = {https://content.iospress.com/articles/data-science/ds190026},
  doi = {10.3233/DS-190026},
  abstract = {The FAIR Guiding Principles, published in 2016, aim to improve the findability, accessibility, interoperability and reusability of digital research objects for both humans and machines. Until now the FAIR principles have been mostly applied to resear},
  language = {en},
  number = {Preprint},
  urldate = {2020-04-09},
  journal = {Data Science},
  author = {Anna-Lena Lamprecht and Leyla Garcia and Mateusz Kuzak and Carlos Martinez and Ricardo Arcila and Eva {Martin Del Pico} and Victoria {Dominguez Del Angel} and Stephanie {van de Sandt} and Jon Ison and Paula Andrea Martinez and Peter McQuilton and Alfonso Valencia and Jennifer Harrow and Fotis Psomopoulos and Josep Ll Gelpi and Neil {Chue Hong} and Carole Goble and Salvador Capella-Gutierrez},
  month = {jan},
  year = {2019},
  pages = {1--23},
}

@Article{jimenez_four_2017,
  title = {Four simple recommendations to encourage best practices in research software},
  volume = {6},
  issn = {2046-1402},
  url = {https://f1000research.com/articles/6-876/v1},
  doi = {10.12688/f1000research.11407.1},
  abstract = {Scientific research relies on computer software, yet software is not always developed following practices that ensure its quality and sustainability. This manuscript does not aim to propose new software development best practices, but rather to provide simple recommendations that encourage the adoption of existing best practices. Software development best practices promote better quality software, and better quality software improves the reproducibility and reusability of research. These recommendations are designed around Open Source values, and provide practical suggestions that contribute to making research software and its source code more discoverable, reusable and transparent. This manuscript is aimed at developers, but also at organisations, projects, journals and funders that can increase the quality and sustainability of research software by encouraging the adoption of these recommendations.},
  language = {en},
  urldate = {2020-04-09},
  journal = {F1000Research},
  author = {Rafael C. Jim{\a'e}nez and Mateusz Kuzak and Monther Alhamdoosh and Michelle Barker and B{\a'e}r{\a'e}nice Batut and Mikael Borg and Salvador Capella-Gutierrez and Neil {Chue Hong} and Martin Cook and Manuel Corpas and Madison Flannery and Leyla Garcia and Josep Ll. Gelp{\a'\i} and Simon Gladman and Carole Goble and Montserrat {Gonz{\a'a}lez Ferreiro} and Alejandra Gonzalez-Beltran and Philippa C. Griffin and Bj{\"o}rn Gr{\"u}ning and Jonas Hagberg and Petr Holub and Rob Hooft and Jon Ison and Daniel S. Katz and Brane Lesko{\v s}ek and Federico {L{\a'o}pez G{\a'o}mez} and Luis J. Oliveira and David Mellor and Rowland Mosbergen and Nicola Mulder and Yasset Perez-Riverol and Robert Pergl and Horst Pichler and Bernard Pope and Ferran Sanz and Maria V. Schneider and Victoria Stodden and Rados{\l}aw Suchecki and Radka {Svobodov{\a'a} Va{\v r}ekov{\a'a}} and Harry-Anton Talvik and Ilian Todorov and Andrew Treloar and Sonika Tyagi and Maarten {van Gompel} and Daniel Vaughan and Allegra Via and Xiaochuan Wang and Nathan S. Watson-Haigh and Steve Crouch},
  month = {jun},
  year = {2017},
  pages = {876},
}

@Misc{sheildsio_shieldsio_nodate,
  title = {Shields.io: {Quality} metadata badges for open source projects},
  url = {https://shields.io/},
  urldate = {2020-04-09},
  author = {{sheilds.io}},
}

@Misc{van_rossum_pep_nodate,
  title = {{PEP} 8 -- {Style} {Guide} for {Python} {Code}},
  url = {https://www.python.org/dev/peps/pep-0008/},
  abstract = {The official home of the Python Programming Language},
  language = {en},
  urldate = {2020-04-09},
  journal = {Python.org},
  author = {Guido {van Rossum} and Barry Warsaw and Nick Coghlan},
}

@Misc{the_turing_way_community_turing_2019,
  title = {The {Turing} {Way}: {A} {Handbook} for {Reproducible} {Data} {Science}},
  shorttitle = {The {Turing} {Way}},
  url = {https://zenodo.org/record/3233986},
  abstract = {Reproducible research is necessary to ensure that scientific work can be trusted. Funders and publishers are beginning to require that publications include access to the underlying data and the analysis code. The goal is to ensure that all results can be independently verified and built upon in future work. This is sometimes easier said than done. Sharing these research outputs means understanding data management, library sciences, software development, and continuous integration techniques: skills that are not widely taught or expected of academic researchers and data scientists. The Turing Way is a handbook to support students, their supervisors, funders and journal editors in ensuring that reproducible data science is {"}too easy not to do{"}. It will include training material on version control, analysis testing, and open and transparent communication with future users, and build on Turing Institute case studies and workshops. This project is openly developed and any and all questions, comments and recommendations are welcome at our github repository: https://github.com/alan-turing-institute/the-turing-way. Release log v0.0.4: Continuous integration chapter merged to master. v0.0.3: Reproducible environments chapter merged to master. v0.0.2: Version control chapter merged to master. v0.0.1: Reproducibility chapter merged to master.},
  urldate = {2020-04-09},
  publisher = {Zenodo},
  author = {The Turing Way Community and Becky Arnold and Louise Bowler and Sarah Gibson and Patricia Herterich and Rosie Higman and Anna Krystalli and Alexander Morley and Martin O'Reilly and Kirstie Whitaker},
  month = {mar},
  year = {2019},
  doi = {10.5281/zenodo.3233986},
}

@InCollection{batarseh_3_2020,
  title = {3 - {The} history and future prospects of open data and open source software},
  isbn = {978-0-12-818366-3},
  url = {http://www.sciencedirect.com/science/article/pii/B9780128183663000034},
  abstract = {Open data for all New Yorkers is the tagline on New York City's open data website. Open government is being promoted at most countries of the western world. Governments' transparency levels are being measured by the amount of data they share through their online public repositories. Additionally, open source software is promoted at governments, academia, and the industry—this is the new digital story of this century, and the new testament between the Gods of technology and there users; data and software openness will redefine the path forward and aim to rekindle our collective intelligence. Data and software openness can redefine Data Democracy and be the catalyst for its progress. This chapter provides a historical insight into data and software openness, the beginnings, the heroes, prospects for the future, and all things we cannot afford to negotiate or lose.},
  language = {en},
  urldate = {2020-04-03},
  booktitle = {Data {Democracy}},
  publisher = {Academic Press},
  author = {Feras A. Batarseh and Abhinav Kumar and Sam Eisenberg},
  editor = {Feras A. Batarseh and Ruixin Yang},
  month = {jan},
  year = {2020},
  doi = {10.1016/B978-0-12-818366-3.00003-4},
  keywords = {Copyleft, Hacking, Open data, Open source software},
  pages = {29--43},
}

@Misc{wickham_r-libwaldo_2020,
  title = {r-lib/waldo},
  url = {https://github.com/r-lib/waldo},
  abstract = {Find differences between R objects.},
  urldate = {2020-03-30},
  publisher = {R infrastructure},
  author = {Hadley Wickham},
  month = {mar},
  year = {2020},
  note = {original-date: 2020-03-29T16:00:40Z},
  keywords = {diff, r, testing},
}

@Misc{henry_lifecycle_2020,
  title = {lifecycle: {Manage} the {Life} {Cycle} of your {Package} {Functions}},
  copyright = {GPL-3},
  shorttitle = {lifecycle},
  url = {https://CRAN.R-project.org/package=lifecycle},
  abstract = {Manage the life cycle of your exported functions with shared conventions, documentation badges, and non-invasive deprecation warnings. The 'lifecycle' package defines four development stages (experimental, maturing, stable, and questioning) and three deprecation stages (soft-deprecated, deprecated, and defunct). It makes it easy to insert badges corresponding to these stages in your documentation. Usage of deprecated functions are signalled with increasing levels of non-invasive verbosity.},
  urldate = {2020-03-24},
  author = {Lionel Henry and {RStudio}},
  month = {mar},
  year = {2020},
}

@InProceedings{avelino_assessing_2017,
  address = {Cham},
  series = {{IFIP} {Advances} in {Information} and {Communication} {Technology}},
  title = {Assessing {Code} {Authorship}: {The} {Case} of the {Linux} {Kernel}},
  isbn = {978-3-319-57735-7},
  shorttitle = {Assessing {Code} {Authorship}},
  doi = {10.1007/978-3-319-57735-7_15},
  abstract = {Code authorship is a key information in large-scale open-source systems. Among others, it allows maintainers to assess division of work and identify key collaborators. Interestingly, open-source communities lack guidelines on how to manage authorship. This could be mitigated by setting to build an empirical body of knowledge on how authorship-related measures evolve in successful open-source communities. Towards that direction, we perform a case study on the Linux kernel. Our results show that: (a) only a small portion of developers (26\%) makes significant contributions to the code base; (b) the distribution of the number of files per author is highly skewed—a small group of top-authors (3\%) is responsible for hundreds of files, while most authors (75\%) are responsible for at most 11 files; (c) most authors (62\%) have a specialist profile; (d) authors with a high number of co-authorship connections tend to collaborate with others with less connections.},
  language = {en},
  booktitle = {Open {Source} {Systems}: {Towards} {Robust} {Practices}},
  publisher = {Springer International Publishing},
  author = {Guilherme Avelino and Leonardo Passos and Andre Hora and Marco Tulio Valente},
  editor = {Federico Balaguer and Roberto {Di Cosmo} and Alejandra Garrido and Fabio Kon and Gregorio Robles and Stefano Zacchiroli},
  year = {2017},
  keywords = {Code authorship, Developer networks, Linux kernel},
  pages = {151--163},
}

@Misc{noauthor_overcoming_nodate,
  title = {Overcoming {Social} {Barriers} {When} {Contributing} to {Open} {Source} {Software} {Projects} {\textbar} {SpringerLink}},
  url = {https://link.springer.com/article/10.1007/s10606-018-9335-z},
  urldate = {2020-03-18},
}

@Misc{bossek_jakob_nodate,
  title = {Jakob {Bossek} - {PhD} candidate},
  url = {http://www.jakobbossek.de/software/},
  urldate = {2020-03-16},
  author = {Jakob Bossek},
}

@Misc{microsoft_microsoftnni_2020,
  title = {microsoft/nni},
  copyright = {MIT},
  url = {https://github.com/microsoft/nni},
  abstract = {An open source AutoML toolkit for automate machine learning lifecycle, including feature engineering, neural architecture search, model compression and hyper-parameter tuning.},
  urldate = {2020-03-16},
  publisher = {Microsoft},
  author = {{Microsoft}},
  month = {mar},
  year = {2020},
  note = {original-date: 2018-06-01T05:51:44Z},
  keywords = {automated-feature-engineering, automated-machine-learning, automl, bayesian-optimization, data-science, deep-learning, deep-neural-network, distributed, feature-engineering, feature-extraction, hyperparameter-optimization, machine-learning, machine-learning-algorithms, model-compression, nas, neural-architecture-search, neural-network, python, pytorch, tensorflow},
}

@Misc{uber_uberludwig_2020,
  title = {uber/ludwig},
  copyright = {Apache-2.0},
  url = {https://github.com/uber/ludwig},
  abstract = {Ludwig is a toolbox built on top of TensorFlow that allows to train and test deep learning models without the need to write code.},
  urldate = {2020-03-16},
  publisher = {Uber Open Source},
  author = {{uber}},
  month = {mar},
  year = {2020},
  note = {original-date: 2018-12-27T23:58:12Z},
  keywords = {computer-vision, deep, deep-learning, deep-neural-networks, deeplearning, learning, machine, machine-learning, machinelearning, natural-language, natural-language-generation, natural-language-processing, natural-language-understanding, python3},
}

@Misc{r_validation_hub_risk-based_nodate,
  title = {A {Risk}-based {Approach} for {Assessing} {R} package {Accuracy} within a {Validated} {Infrastructure}},
  url = {/white-paper//},
  language = {en-us},
  urldate = {2020-03-12},
  author = {{R Validation HUb}},
}

@Misc{hayes_testing_nodate,
  title = {testing statistical software},
  url = {https://www.alexpghayes.com/blog/testing-statistical-software/},
  abstract = {Do you want some uncertainty with that?},
  language = {en-US},
  urldate = {2020-03-12},
  journal = {aleatoric},
  author = {Alex Hayes},
}

@Article{estivill-castro_why_2002,
  title = {Why so many clustering algorithms: a position paper},
  volume = {4},
  issn = {1931-0145},
  shorttitle = {Why so many clustering algorithms},
  url = {https://doi.org/10.1145/568574.568575},
  doi = {10.1145/568574.568575},
  abstract = {We argue that there are many clustering algorithms, because the notion of {"}cluster{"} cannot be precisely defined. Clustering is in the eye of the beholder, and as such, researchers have proposed many induction principles and models whose corresponding optimization problem can only be approximately solved by an even larger number of algorithms. Therefore, comparing clustering algorithms, must take into account a careful understanding of the inductive principles involved.},
  number = {1},
  urldate = {2020-03-11},
  journal = {ACM SIGKDD Explorations Newsletter},
  author = {Vladimir Estivill-Castro},
  month = {jun},
  year = {2002},
  keywords = {clustering, clustering criterion, inductive principle},
  pages = {65--75},
}

@Misc{maciver_most_nodate,
  title = {Most testing is ineffective - {Hypothesis}},
  url = {https://hypothesis.works/},
  urldate = {2020-03-05},
  author = {David MacIver},
  keywords = {testing},
}

@Misc{olsen_ludvigolsenxpectr_2020,
  title = {{LudvigOlsen}/xpectr},
  url = {https://github.com/LudvigOlsen/xpectr},
  abstract = {R package for generating expectations for `testthat` unit testing},
  urldate = {2020-03-02},
  author = {Ludvig Renbo Olsen},
  month = {mar},
  year = {2020},
  note = {original-date: 2020-01-15T14:35:53Z},
  keywords = {testing},
}

@Misc{loo_markvanderlootinytest_2020,
  title = {markvanderloo/tinytest},
  copyright = {GPL-3.0},
  url = {https://github.com/markvanderloo/tinytest},
  abstract = {A lightweight, no-dependency, but full-featured package for unit testing in R},
  urldate = {2020-03-05},
  author = {Mark van der Loo},
  month = {mar},
  year = {2020},
  note = {original-date: 2019-02-01T16:22:04Z},
  keywords = {testing},
}

@Misc{andersen_mikldkroxytest_2020,
  title = {mikldk/roxytest},
  url = {https://github.com/mikldk/roxytest},
  abstract = {Inline testthat tests with roxygen2. Contribute to mikldk/roxytest development by creating an account on GitHub.},
  urldate = {2020-03-05},
  author = {Mikkel Meyer Andersen},
  month = {mar},
  year = {2020},
  note = {original-date: 2019-07-24T10:19:29Z},
  keywords = {testing},
}

@Misc{kiener_rwsearch_2020,
  title = {{RWsearch}: {Lazy} {Search} in {R} {Packages}, {Task} {Views}, {CRAN}, the {Web}. {All}-in-{One} {Download}},
  copyright = {GPL-2},
  shorttitle = {{RWsearch}},
  url = {https://CRAN.R-project.org/package=RWsearch},
  abstract = {Search by keywords in R packages, task views, CRAN, the web and display the results in console, txt, html or pdf pages. Download the whole documentation (html index, pdf manual, vignettes, source code, etc) with a single instruction. Visualize the package dependencies. Several functions for task view maintenance and exploration of CRAN archive. Quick links to more than 70 web search engines. Lazy evaluation of non-standard content is available throughout the package and eases the use of many functions.},
  urldate = {2020-02-26},
  author = {Patrice Kiener},
  month = {feb},
  year = {2020},
}

@Misc{noauthor_go_nodate,
  title = {Go packages in {R} packages},
  url = {/blog/2017/06/09/go-packages-in-r-packages//},
  abstract = {purrple},
  language = {en},
  urldate = {2020-02-12},
}

@Misc{core_infrastructure_coreinfrastructurebest-practices-badge_nodate,
  title = {coreinfrastructure/best-practices-badge},
  url = {https://github.com/coreinfrastructure/best-practices-badge},
  abstract = {🏆Core Infrastructure Initiative Best Practices Badge - coreinfrastructure/best-practices-badge},
  language = {en},
  urldate = {2020-02-11},
  journal = {GitHub},
  author = {Core Infrastructure},
}

@Misc{noauthor_statistical_nodate,
  title = {Statistical {Modeling}, {Causal} {Inference}, and {Social} {Science}},
  url = {https://statmodeling.stat.columbia.edu/},
  urldate = {2020-02-11},
}

@Article{belkin_reconciling_2019,
  title = {Reconciling modern machine learning practice and the bias-variance trade-off},
  url = {http://arxiv.org/abs/1812.11118},
  abstract = {Breakthroughs in machine learning are rapidly changing science and society, yet our fundamental understanding of this technology has lagged far behind. Indeed, one of the central tenets of the field, the bias-variance trade-off, appears to be at odds with the observed behavior of methods used in the modern machine learning practice. The bias-variance trade-off implies that a model should balance under-fitting and over-fitting: rich enough to express underlying structure in data, simple enough to avoid fitting spurious patterns. However, in the modern practice, very rich models such as neural networks are trained to exactly fit (i.e., interpolate) the data. Classically, such models would be considered over-fit, and yet they often obtain high accuracy on test data. This apparent contradiction has raised questions about the mathematical foundations of machine learning and their relevance to practitioners. In this paper, we reconcile the classical understanding and the modern practice within a unified performance curve. This {"}double descent{"} curve subsumes the textbook U-shaped bias-variance trade-off curve by showing how increasing model capacity beyond the point of interpolation results in improved performance. We provide evidence for the existence and ubiquity of double descent for a wide spectrum of models and datasets, and we posit a mechanism for its emergence. This connection between the performance and the structure of machine learning models delineates the limits of classical analyses, and has implications for both the theory and practice of machine learning.},
  urldate = {2020-02-11},
  journal = {arXiv:1812.11118 [cs, stat]},
  author = {Mikhail Belkin and Daniel Hsu and Siyuan Ma and Soumik Mandal},
  month = {sep},
  year = {2019},
  note = {arXiv: 1812.11118},
  keywords = {Computer Science - Machine Learning, Statistics - Machine Learning},
}

@Misc{noauthor_overfitting_nodate,
  title = {overfitting: a guided tour},
  shorttitle = {overfitting},
  url = {https://www.alexpghayes.com/blog/overfitting-a-guided-tour/},
  abstract = {Do you want some uncertainty with that?},
  language = {en-US},
  urldate = {2020-02-11},
  journal = {aleatoric},
}

@Misc{noauthor_testing_nodate,
  title = {testing statistical software},
  url = {https://www.alexpghayes.com/blog/testing-statistical-software/},
  abstract = {Do you want some uncertainty with that?},
  language = {en-US},
  urldate = {2020-02-11},
  journal = {aleatoric},
}

@Misc{noauthor_type_nodate,
  title = {type stable estimation},
  url = {https://www.alexpghayes.com/blog/type-stable-estimation/},
  abstract = {Do you want some uncertainty with that?},
  language = {en-US},
  urldate = {2020-02-11},
  journal = {aleatoric},
}

@Misc{soetewey_antoine_stats_nodate,
  title = {Stats and {R}},
  url = {https://www.statsandr.com/},
  abstract = {A blog on statistics and R aiming at helping academics and professionals working with data to grasp important concepts in statistics and to apply them in R.},
  language = {en-US},
  urldate = {2020-02-11},
  journal = {Stats and R},
  author = {{Soetewey, Antoine}},
}

@Misc{holdgraf_chris_predictably_nodate,
  title = {Predictably {Noisy}},
  url = {https://predictablynoisy.com/},
  language = {en},
  urldate = {2020-02-11},
  journal = {Predictably Noisy},
  author = {Chris Holdgraf},
}

@Misc{resnick_military_2019,
  title = {The military wants to build a bullshit detector for social science studies},
  url = {https://www.vox.com/science-and-health/2019/2/25/18211125/darpa-score-center-for-open-science-ai},
  abstract = {Artificial intelligence could potentially help psychology move past its {"}replication crisis.{"}},
  language = {en},
  urldate = {2020-02-11},
  journal = {Vox},
  author = {Brian Resnick},
  month = {feb},
  year = {2019},
}

@TechReport{yen_computational_2019,
  type = {preprint},
  title = {A {Computational} {Analysis} of the {Dynamics} of {R} {Style} {Based} on 94 {Million} {Lines} of {Code} from {All} {CRAN} {Packages} in the {Past} 20 {Years}},
  url = {https://osf.io/ts2wq},
  abstract = {There are so many programming style variations in R. We have analyzed 94 million lines of R code and quantified the evolution in popularity of 12 style-elements from 1998 to 2018. We attribute 3 main factors that drive changes in programming style: effect of style-guides, effect of introducing new features, and effect of editors. We have identified community-specific programming style variations. For example, there are programming communities which do not use snake\_case at all. A consensus in programming style is forming. We have summarised it into a \_Consensus-based Style\_.},
  urldate = {2020-01-24},
  institution = {SocArXiv},
  author = {Chai-Yi Yen and Mia Huai-Wen Chang and Chung-hong Chan},
  month = {jul},
  year = {2019},
  doi = {10.31235/osf.io/ts2wq},
}

@Article{bzdok_statistics_2018,
  title = {Statistics versus machine learning},
  volume = {15},
  copyright = {2018 Nature Publishing Group, a division of Macmillan Publishers Limited. All Rights Reserved.},
  url = {https://www.nature.com/articles/nmeth.4642},
  doi = {10.1038/nmeth.4642},
  abstract = {Statistics draws population inferences from a sample, and machine learning finds generalizable predictive patterns.},
  language = {En},
  urldate = {2020-01-13},
  journal = {Nature Methods},
  author = {Danilo Bzdok and Naomi Altman and Martin Krzywinski},
  month = {apr},
  year = {2018},
  pages = {233--234},
}

@Article{lenhardt_data_2014,
  title = {Data {Management} {Lifecycle} and {Software} {Lifecycle} {Management} in the {Context} of {Conducting} {Science}},
  volume = {2},
  copyright = {Authors who publish with this journal agree to the following terms:    Authors retain copyright and grant the journal right of first publication with the work simultaneously licensed under a  Creative Commons Attribution License  that allows others to share the work with an acknowledgement of the work's authorship and initial publication in this journal.  Authors are able to enter into separate, additional contractual arrangements for the non-exclusive distribution of the journal's published version of the work (e.g., post it to an institutional repository or publish it in a book), with an acknowledgement of its initial publication in this journal.  Authors are permitted and encouraged to post their work online (e.g., in institutional repositories or on their website) prior to and during the submission process, as it can lead to productive exchanges, as well as earlier and greater citation of published work (See  The Effect of Open Access ).  All third-party images reproduced on this journal are shared under Educational Fair Use. For more information on  Educational Fair Use , please see  this useful checklist prepared by Columbia University Libraries .   All copyright  of third-party content posted here for research purposes belongs to its original owners.  Unless otherwise stated all references to characters and comic art presented on this journal are ©, ® or ™ of their respective owners. No challenge to any owner’s rights is intended or should be inferred.},
  issn = {2049-9647},
  url = {http://openresearchsoftware.metajnl.com/articles/10.5334/jors.ax/},
  doi = {10.5334/jors.ax},
  abstract = {This paper examines the potential for comparisons of digital science data curation lifecycles to software lifecycle development to provide insight into promoting sustainable science software. The goal of this paper is to start a dialog examining the commonalities, connections, and potential complementarities between the data lifecycle and the software lifecycle in support of sustainable software. We argue, based on this initial survey, delving more deeply into the connections between data lifecycle approaches and software development lifecycles will enhance both in support of science.},
  language = {en},
  number = {1},
  urldate = {2020-01-08},
  journal = {Journal of Open Research Software},
  author = {W. Lenhardt and Stanley Ahalt and Brian Blanton and Laura Christopherson and Ray Idaszak},
  month = {jul},
  year = {2014},
  keywords = {data lifecycle, software development lifecycle, sustainable software},
  pages = {e15},
}

@Article{mohammed_comparison_2010,
  title = {A {Comparison} {Between} {Five} {Models} {Of} {Software} {Engineering}},
  volume = {7},
  abstract = {This research deals with a vital and important issue in computer world. It is concerned with the software management processes that examine the area of software development through the development models, which are known as software development life cycle. It represents five of the development models namely, waterfall, Iteration, V-shaped, spiral and Extreme programming. These models have advantages and disadvantages as well. Therefore, the main objective of this research is to represent different models of software development and make a comparison between them to show the features and defects of each model.},
  number = {5},
  journal = {International Journal of Computer Science},
  author = {Nabil Mohammed and Ali Munassar and A. Govardhan},
  year = {2010},
}

@Article{kumar_critical_2016,
  title = {Critical {Analysis} of {Software} {Process} {Models}},
  volume = {NCACA 2016},
  url = {https://www.ijcaonline.org/proceedings/ncaca2016/number2/26176-1043},
  abstract = {IJCA is a computer science and electronics journal related with Theoretical Informatics, Quantum Computing, Software Testing, Computer Vision, Digital Systems, Pervasive Computing, Computational Topology etc.},
  language = {en-gb},
  number = {2},
  urldate = {2020-01-08},
  journal = {IJCA Proceedings on National Conference on Advances in Computing Applications},
  author = {Subodh Kumar and N. K. Mishra and Sarkar Sharan Mehta},
  month = {sep},
  year = {2016},
  pages = {12--14},
}

@Article{boettiger_building_2015,
  title = {Building {Software}, {Building} {Community}: {Lessons} from the {rOpenSci} {Project}},
  volume = {3},
  copyright = {Authors who publish with this journal agree to the following terms:    Authors retain copyright and grant the journal right of first publication with the work simultaneously licensed under a  Creative Commons Attribution License  that allows others to share the work with an acknowledgement of the work's authorship and initial publication in this journal.  Authors are able to enter into separate, additional contractual arrangements for the non-exclusive distribution of the journal's published version of the work (e.g., post it to an institutional repository or publish it in a book), with an acknowledgement of its initial publication in this journal.  Authors are permitted and encouraged to post their work online (e.g., in institutional repositories or on their website) prior to and during the submission process, as it can lead to productive exchanges, as well as earlier and greater citation of published work (See  The Effect of Open Access ).  All third-party images reproduced on this journal are shared under Educational Fair Use. For more information on  Educational Fair Use , please see  this useful checklist prepared by Columbia University Libraries .   All copyright  of third-party content posted here for research purposes belongs to its original owners.  Unless otherwise stated all references to characters and comic art presented on this journal are ©, ® or ™ of their respective owners. No challenge to any owner’s rights is intended or should be inferred.},
  issn = {2049-9647},
  shorttitle = {Building {Software}, {Building} {Community}},
  url = {http://openresearchsoftware.metajnl.com/articles/10.5334/jors.bu/},
  doi = {10.5334/jors.bu},
  abstract = {rOpenSci is a developer collective originally formed in 2011 by graduate students and post-docs from ecology and evolutionary biology to collaborate on building software tools to facilitate a more open and synthetic approach in the face of transformative rise of large and heterogeneous data. Born on the internet (the collective only began through chance discussions over social media), we have grown into a widely recognized effort that supports an ecosystem of some 45 software packages, engages scores of collaborators, has taught dozens of workshops around the world, and has secured over \$480,000 in grant support. As young scientists working in an academic context largely without direct support for our efforts, we have first hand experience with most of the the technical and social challenges WSSSPE seeks to address. In this paper we provide an experience report which describes our approach and success in building an effective and diverse community.},
  language = {en},
  number = {1},
  urldate = {2020-01-08},
  journal = {Journal of Open Research Software},
  author = {Carl Boettiger and Scott Chamberlain and Edmund Hart and Karthik Ram},
  month = {nov},
  year = {2015},
  keywords = {R, data science, open science, ropensci},
  pages = {e8},
}

@Misc{noauthor_large_nodate,
  title = {A large scale study of programming languages and code quality in github {\textbar} {Proceedings} of the 22nd {ACM} {SIGSOFT} {International} {Symposium} on {Foundations} of {Software} {Engineering}},
  url = {https://dl.acm.org/doi/abs/10.1145/2635868.2635922},
  language = {EN},
  urldate = {2020-01-08},
}

@Article{spencer_open-source_2015,
  title = {Open-{Source} {Development} {Experiences} in {Scientific} {Software}: {The} {HANDE} {Quantum} {Monte} {Carlo} {Project}},
  volume = {3},
  copyright = {Authors who publish with this journal agree to the following terms:    Authors retain copyright and grant the journal right of first publication with the work simultaneously licensed under a  Creative Commons Attribution License  that allows others to share the work with an acknowledgement of the work's authorship and initial publication in this journal.  Authors are able to enter into separate, additional contractual arrangements for the non-exclusive distribution of the journal's published version of the work (e.g., post it to an institutional repository or publish it in a book), with an acknowledgement of its initial publication in this journal.  Authors are permitted and encouraged to post their work online (e.g., in institutional repositories or on their website) prior to and during the submission process, as it can lead to productive exchanges, as well as earlier and greater citation of published work (See  The Effect of Open Access ).  All third-party images reproduced on this journal are shared under Educational Fair Use. For more information on  Educational Fair Use , please see  this useful checklist prepared by Columbia University Libraries .   All copyright  of third-party content posted here for research purposes belongs to its original owners.  Unless otherwise stated all references to characters and comic art presented on this journal are ©, ® or ™ of their respective owners. No challenge to any owner’s rights is intended or should be inferred.},
  issn = {2049-9647},
  shorttitle = {Open-{Source} {Development} {Experiences} in {Scientific} {Software}},
  url = {http://openresearchsoftware.metajnl.com/articles/10.5334/jors.bw/},
  doi = {10.5334/jors.bw},
  abstract = {The HANDE quantum Monte Carlo project offers accessible stochastic algorithms for general use for scientists in the field of quantum chemistry. HANDE is an ambitious and general high-performance code developed by a geographically-dispersed team with a variety of backgrounds in computational science. In the course of preparing a public, open-source release, we have taken this opportunity to step back and look at what we have done and what we hope to do in the future. We pay particular attention to development processes, the approach taken to train students joining the project, and how a flat hierarchical structure aids communication.},
  language = {en},
  number = {1},
  urldate = {2020-01-08},
  journal = {Journal of Open Research Software},
  author = {J. S. Spencer and N. S. Blunt and W. A. Vigor and Fionn D. Malone and W. M. C. Foulkes and James J. Shepherd and A. J. W. Thom},
  month = {nov},
  year = {2015},
  keywords = {software development, student training},
  pages = {e9},
}

@Article{downs_community_2015,
  title = {Community {Recommendations} for {Sustainable} {Scientific} {Software}},
  volume = {3},
  copyright = {Authors who publish with this journal agree to the following terms:    Authors retain copyright and grant the journal right of first publication with the work simultaneously licensed under a  Creative Commons Attribution License  that allows others to share the work with an acknowledgement of the work's authorship and initial publication in this journal.  Authors are able to enter into separate, additional contractual arrangements for the non-exclusive distribution of the journal's published version of the work (e.g., post it to an institutional repository or publish it in a book), with an acknowledgement of its initial publication in this journal.  Authors are permitted and encouraged to post their work online (e.g., in institutional repositories or on their website) prior to and during the submission process, as it can lead to productive exchanges, as well as earlier and greater citation of published work (See  The Effect of Open Access ).  All third-party images reproduced on this journal are shared under Educational Fair Use. For more information on  Educational Fair Use , please see  this useful checklist prepared by Columbia University Libraries .   All copyright  of third-party content posted here for research purposes belongs to its original owners.  Unless otherwise stated all references to characters and comic art presented on this journal are ©, ® or ™ of their respective owners. No challenge to any owner’s rights is intended or should be inferred.},
  issn = {2049-9647},
  url = {http://openresearchsoftware.metajnl.com/articles/10.5334/jors.bt/},
  doi = {10.5334/jors.bt},
  abstract = {Science software has contributed to research practices, but the sustainability of scientific software presents challenges for the future use of research resources. Identifying improvements for science software sustainability practices can contribute to the re-use of science software. A focus group study was conducted to identify ways to improve science software sustainability practices of the Earth science community. A facilitated, roundtable discussion activity at the 2014 Federation of Earth Science Information Partners (ESIP) Summer Meeting elicited recommendations on community activities to improve practices for the sustainability of scientific software. These suggestions fell into three broad themes – (1) improving collaboration and community engagement through publications and presentations (2) developing workshops, training, and documenting best practices and (3) creating incentives and motivation with awards, citation and a reviewed software repository. In addition to the recommendations coming out of the roundtable activity, this paper highlights how community-led groups such as ESIP are key to move a sustainable software effort in its various forms from concept to reality.},
  language = {en},
  number = {1},
  urldate = {2020-01-08},
  journal = {Journal of Open Research Software},
  author = {Robert R. Downs and W. Christopher Lenhardt and Erin Robinson and Ethan Davis and Nicholas Weber},
  month = {nov},
  year = {2015},
  keywords = {Science software, focus groups, software sustainability, sustainable systems},
  pages = {e11},
}

@Book{myers_art_2012,
  address = {Hoboken, NJ},
  title = {The art of software testing},
  isbn = {978-1-118-03196-4},
  language = {English},
  publisher = {Wiley},
  author = {Glenford J Myers and Tom Badgett and Corey Sandler},
  year = {2012},
  note = {OCLC: 775717314},
}

@Misc{center_for_devices_and_radiological_health_general_2019,
  title = {General {Principles} of {Software} {Validation}},
  url = {http://www.fda.gov/regulatory-information/search-fda-guidance-documents/general-principles-software-validation},
  abstract = {General validation principles of medical device software or the validation of software used to design, develop, or manufacture medical devices.},
  language = {en},
  urldate = {2019-12-23},
  journal = {U.S. Food and Drug Administration},
  author = {Center {for Devices} and {adiological Health}},
  month = {may},
  year = {2019},
}

@TechReport{the_r_foundation_for_statistical_computing_r:_2018,
  title = {R: {Regulatory} {Compliance} and {Validation} {IssuesA} {Guidance} {Document} for the {Use} of {R} in {Regulated} {ClinicalTrial} {Environments}},
  url = {https://www.r-project.org/doc/R-FDA.pdf},
  institution = {The R Foundation for Statistical Computing},
  author = {{The R Foundation for Statistical Computing}},
  year = {2018},
}

@Book{ammann_introduction_2017,
  title = {Introduction to software testing},
  isbn = {978-1-107-17201-2},
  language = {English},
  publisher = {Cambridge University Press},
  author = {Paul Ammann and Jeff Offutt},
  year = {2017},
  note = {OCLC: 953738932},
}

@Article{gebru_datasheets_2019,
  title = {Datasheets for {Datasets}},
  url = {http://arxiv.org/abs/1803.09010},
  abstract = {Currently there is no standard way to identify how a dataset was created, and what characteristics, motivations, and potential skews it represents. To begin to address this issue, we propose the concept of a datasheet for datasets, a short document to accompany public datasets, commercial APIs, and pretrained models. The goal of this proposal is to enable better communication between dataset creators and users, and help the AI community move toward greater transparency and accountability. By analogy, in computer hardware, it has become industry standard to accompany everything from the simplest components (e.g., resistors), to the most complex microprocessor chips, with datasheets detailing standard operating characteristics, test results, recommended usage, and other information. We outline some of the questions a datasheet for datasets should answer. These questions focus on when, where, and how the training data was gathered, its recommended use cases, and, in the case of human-centric datasets, information regarding the subjects' demographics and consent as applicable. We develop prototypes of datasheets for two well-known datasets: Labeled Faces in The Wild and the Pang {\textbackslash}\& Lee Polarity Dataset.},
  urldate = {2019-12-20},
  journal = {arXiv:1803.09010 [cs]},
  author = {Timnit Gebru and Jamie Morgenstern and Briana Vecchione and Jennifer Wortman Vaughan and Hanna Wallach and Hal {Daume{\a'e} III} and Kate Crawford},
  month = {apr},
  year = {2019},
  note = {arXiv: 1803.09010},
  keywords = {Computer Science - Artificial Intelligence, Computer Science - Databases, Computer Science - Machine Learning},
}

@Misc{health_guidance_2018,
  title = {Guidance for the {Use} of {Bayesian} {Statistics} in {Medical} {Device} {Clinical} {Trials} ({PDF} {Version})},
  url = {http://www.fda.gov/regulatory-information/search-fda-guidance-documents/guidance-use-bayesian-statistics-medical-device-clinical-trials-pdf-version},
  language = {en},
  urldate = {2019-12-18},
  journal = {U.S. Food and Drug Administration},
  author = {Center for Devices and Radiological Health},
  month = {dec},
  year = {2018},
}

@Misc{research_e9_2019,
  title = {E9 {Statistical} {Principles} for {Clinical} {Trials}},
  url = {http://www.fda.gov/regulatory-information/search-fda-guidance-documents/e9-statistical-principles-clinical-trials},
  abstract = {International Council on Harmonisation - Efficacy},
  language = {en},
  urldate = {2019-12-18},
  journal = {U.S. Food and Drug Administration},
  author = {Center for Drug Evaluation and Research},
  month = {apr},
  year = {2019},
}

@InProceedings{german_evolution_2013,
  title = {The {Evolution} of the {R} {Software} {Ecosystem}},
  doi = {10.1109/CSMR.2013.33},
  abstract = {Software ecosystems form the heart of modern companies' collaboration strategies with end users, open source developers and other companies. An ecosystem consists of a core platform and a halo of user contributions that provide value to a company or project. In order to sustain the level and number of high-quality contributions, it is crucial for companies and contributors to understand how ecosystems tend to evolve and can be maintained successfully over time. As a first step, this paper explores the evolution characteristics of the statistical computing project GNU R, which is a successful, end-user programming ecosystem. We find that the ecosystem of user-contributed R packages has been growing steadily since R's conception, at a significantly faster rate than core packages, yet each individual package remains stable in size. We also identified differences in the way user-contributed and core packages are able to attract an active community of users.},
  booktitle = {2013 17th {European} {Conference} on {Software} {Maintenance} and {Reengineering}},
  author = {Daniel M. German and Bram Adams and Ahmed E. Hassan},
  month = {mar},
  year = {2013},
  note = {ISSN: 1534-5351},
  keywords = {Communities, Companies, Documentation, Ecosystems, Electronic mail, Evolution, GNU R statistical computing project, Programming, R, R software ecosystem, Software, Software ecosystems, software engineering, software evolution, software packages, user community, user contribution, user interfaces, user-contributed R package},
  pages = {243--252},
}

@Misc{bewerunge_peter_validation_2010,
  title = {Validation of {Open}-{Source}-{Software} {Usingthe} example of {R}},
  url = {https://www.lexjansen.com/phuse/2010/rg/RG03.pdf},
  urldate = {2019-12-17},
  author = {Peter Bewerunge},
  year = {2010},
}
